#!/bin/sh

#====================================================
#    Tips: 必须手动先创建一个任意 A 记录& AAAA 记录
#    Author: tanst
#    Dscription: IPv4 & IPv6 dnspod ddns script
#    email: t@tanst.net
#====================================================

#=============== personal config ==============#
API_ID=123456
API_Token=xxxxxxxxxxxxxxxxxxxxxx
DOMAIN=example.com
SUBDOMAIN1=@
SUBDOMAIN2=*

Email_to=t@tanst.com
Email_title='The IP Changed.'
Email_fr='Router-Home'

WCappToken=AT_xxxxxxxxxxxxxxxxxxxxxxxxxxxx
WCuids=UID_xxxxxxxxxxxxxxxxxxxxxxxxxxxx

#===== check IPv4 =======
CHECKURL_V4_1=ip.3322.net
CHECKURL_V4_2=api.ipify.org
CHECKURL_V4_3=ipv4.icanhazip.com

#===== check IPv6 =======
CHECKURL_V6_1=ipv6.icanhazip.com
CHECKURL_V6_2=ipv6.ip.sb
CHECKURL_V6_3=checkip.dns.he.net

#=============== system config ===============
DNSPOD_TOKEN="login_token=${API_ID},${API_Token}"
date
cd $(dirname $0)
if type curl >/dev/null 2>&1; then
	echo "curl 已安装"
else
	echo "curl 未安装"
	exit
fi
#=============== function ===============

sleep_time() {
	sleep=5
	while [ $sleep -gt 0 ]; do
		echo -n $sleep
		sleep 1
		sleep=$(($sleep - 1))
		echo -ne "\r     \r"
	done
}

send_email() {
	Email_body="Hi~<br><br>The new ip is: <br>${NewIP}<br><br>------------<br><br>$(date "+%Y-%m-%d %H:%M:%S")<br>This mail is auto generated by mail api."
	curl -k https://tanst.net/script/mail.php -X POST -d "to=${Email_to}&title=$Email_title&fr=$Email_fr&Body=$Email_body"
}

send_wechat() {
	date=$(date "+%Y-%m-%d %H:%M:%S")
	JSON='{
      "appToken":"'$WCappToken'",
      "content":"'$Email_fr' 的IP地址已更改为：\n'$NewIP'\n时间：'$date'",
      "contentType":1,
      "uids":["'$WCuids'"]
    }'
	curl -k http://wxpusher.zjiecode.com/api/send/message -X POST -H "Content-Type: application/json" -d "${JSON}"
}

GetWanIPv4() {

	local lanIps="^$"

	lanIps="$lanIps|(^10\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$)"
	lanIps="$lanIps|(^127\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$)"
	lanIps="$lanIps|(^169\.254\.[0-9]{1,3}\.[0-9]{1,3}$)"
	lanIps="$lanIps|(^172\.(1[6-9]|2[0-9]|3[0-1])\.[0-9]{1,3}\.[0-9]{1,3}$)"
	lanIps="$lanIps|(^192\.168\.[0-9]{1,3}\.[0-9]{1,3}$)"

	case $(uname) in
	'Linux')
		CURRENT_IPv4=$(ip -o -4 addr list | grep 'vwan1'| grep -Ev '\s(docker|lo)' | awk '{print $4}' | cut -d/ -f1 | grep -Ev "$lanIps" | head -n 1)
		;;
	'Darwin')
		CURRENT_IPv4=$(ifconfig | grep "inet " | grep -v 127.0.0.1 | awk '{print $2}' | grep -Ev "$lanIps")
		;;
	esac

	#如果通过网卡未获取到公网 IPv4，再通过访问公网 API 获取。
	if [ -z "$CURRENT_IPv4" ]; then
		echo "网卡未获取到公网 IPv4，开始通过访问公网 API 获取"
		IPv4REX='[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}'
		CURRENT_IPv4=$(curl -4 -k -s $CHECKURL_V4_1 | grep -Eo "$IPv4REX")

		if test $CURRENT_IPv4; then
			echo "succeeded: $CHECKURL_V4_1 获取公网IPv4正常"
		else
			echo "error: $CHECKURL_V4_1 获取公网IPv4错误，请检查URL是否正常"
			CURRENT_IPv4=$(curl -4 -k -s $CHECKURL_V4_2 | grep -Eo "$IPv4REX" | sed -nr "$SEDREX")
			if test $CURRENT_IPv4; then
				echo "succeeded: $CHECKURL_V4_2 获取公网IPv4正常"
			else
				echo "error: $CHECKURL_V4_2 获取公网IPv4错误，请检查URL是否正常"
				CURRENT_IPv4=$(curl -4 -k -s $CHECKURL_V4_3 | grep -Eo "$IPv4REX" | sed -nr "$SEDREX")
				if test $CURRENT_IPv4; then
					echo "succeeded: $CHECKURL_V4_3 获取公网IPv4正常"
				else
					echo "error: $CHECKURL_V4_3 获取公网IPv4错误，请检查URL是否正常"
					exit
				fi
			fi
		fi
	else
		echo "succeeded: IPv4 通过网卡获取公网 IPv4 正常"
	fi
}

GetWanIPv6() {
	
    CURRENT_IPv6=$(ip -o -6 addr list | grep -Ev '\s(docker|lo)' | awk '{print $4}' | cut -d/ -f1 | grep ^2 | grep ::1$ | sed -n '1,1p')
	if [ -z "$CURRENT_IPv6" ]; then
		echo "网卡未获取到公网 IPv6，开始通过访问公网 API 获取"
        IPv6REX='([a-f0-9]{1,3}(:[a-f0-9]{1,4}){7}|[a-f0-9]{1,4}(:[a-f0-9]{1,4}){0,7}::[a-f0-9]{0,4}(:[a-f0-9]{1,4}){0,7})'
		CURRENT_IPv6=$(curl -6 -k -s $CHECKURL_V6_1 | grep -Eo "$IPv6REX")

		if test $CURRENT_IPv6; then
			echo "succeeded: $CHECKURL_V6_1 获取公网IPv6正常"
		else
			echo "error: $CHECKURL_V6_1 获取公网IPv6错误，请检查URL是否正常"
			CURRENT_IPv6=$(curl -6 -k -s $CHECKURL_V6_2 | grep -Eo "$IPv6REX" | sed -nr "$SEDREX")
			#改成群晖 IPv6
			CURRENT_IPv6=$(echo "${CURRENT_IPv6}" | sed 's/::1/:7285:c2ff:fe58:11b6/')
			if test $CURRENT_IPv6; then
				echo "succeeded: $CHECKURL_V6_2 获取公网IPv6正常"
			else
				echo "error: $CHECKURL_V6_2 获取公网IPv6错误，请检查URL是否正常"
				CURRENT_IPv6=$(curl -6 -k -s $CHECKURL_V6_3 | grep -Eo "$IPv6REX" | sed -nr "$SEDREX")
				#改成群晖 IPv6
				CURRENT_IPv6=$(echo "${CURRENT_IPv6}" | sed 's/::1/:7285:c2ff:fe58:11b6/')
				if test $CURRENT_IPv6; then
					echo "succeeded: $CHECKURL_V6_3 获取公网IPv6正常"
				else
					echo "error: $CHECKURL_V6_3 获取公网IPv6错误，请检查URL是否正常"
					exit
				fi
			fi
		fi
	else
		echo "succeeded: IPv6 通过网卡获取公网 IPv6 正常"
	fi

	#改成群晖 IPv6
	CURRENT_IPv6=$(echo "${CURRENT_IPv6}" | sed 's/::1/:7285:c2ff:fe58:11b6/')

}

GetRecordIPv4() {

	#= s1v4
	Record_List_s1v4="$(curl -s -k https://dnsapi.cn/Record.List -d "${DNSPOD_TOKEN}&format=json&record_type=A&domain=${DOMAIN}&sub_domain=${SUBDOMAIN1}")"

	RECORD_IP_s1v4=$(echo $Record_List_s1v4 | sed 's/.*,"value":"\([0-9\.]*\)".*/\1/')
	LINE_ID_s1v4=$(echo $Record_List_s1v4 | sed 's/.*,"line_id":"\([0-9]*\)".*/\1/')
	STATUS_CODE_s1v4=$(echo $Record_List_s1v4 | sed 's/.*{"code":"\([0-9]*\)".*/\1/')
	RECORD_ID_s1v4=$(echo $Record_List_s1v4 | sed 's/.*\[{"id":"\([0-9]*\)".*/\1/')

	if [ "$STATUS_CODE_s1v4" != "1" ]; then
		echo "Error: Get DNSPOD API Error!"
		exit
	else
		echo "succeeded: Get Subdomain1 RecordIP Successfully"
	fi

	#= s2v4
	Record_List_s2v4="$(curl -s -k https://dnsapi.cn/Record.List -d "${DNSPOD_TOKEN}&format=json&record_type=A&domain=${DOMAIN}&sub_domain=${SUBDOMAIN2}")"

	RECORD_IP_s2v4=$(echo $Record_List_s2v4 | sed 's/.*,"value":"\([0-9\.]*\)".*/\1/')
	LINE_ID_s2v4=$(echo $Record_List_s2v4 | sed 's/.*,"line_id":"\([0-9]*\)".*/\1/')
	STATUS_CODE_s2v4=$(echo $Record_List_s2v4 | sed 's/.*{"code":"\([0-9]*\)".*/\1/')
	RECORD_ID_s2v4=$(echo $Record_List_s2v4 | sed 's/.*\[{"id":"\([0-9]*\)".*/\1/')

	if [ "$STATUS_CODE_s2v4" != "1" ]; then
		echo "Error: Get DNSPOD API Error!"
		exit
	else
		echo "succeeded: Get Subdomain2 RecordIP Successfully"
	fi
}

GetRecordIPv6() {

	# s1v6
	Record_List_s1v6="$(curl -s -k https://dnsapi.cn/Record.List -d "${DNSPOD_TOKEN}&format=json&record_type=AAAA&domain=${DOMAIN}&sub_domain=${SUBDOMAIN1}")"

	RECORD_IP_s1v6=$(echo $Record_List_s1v6 | sed 's/.*"value":"\([0-9a-f\.:]*\)".*/\1/')
	LINE_ID_s1v6=$(echo $Record_List_s1v6 | sed 's/.*,"line_id":"\([0-9]*\)".*/\1/')
	STATUS_CODE_s1v6=$(echo $Record_List_s1v6 | sed 's/.*{"code":"\([0-9]*\)".*/\1/')
	RECORD_ID_s1v6=$(echo $Record_List_s1v6 | sed 's/.*\[{"id":"\([0-9]*\)".*/\1/')

	if [ "$STATUS_CODE_s1v6" != "1" ]; then
		echo "Error: Get DNSPOD API Error!"
		exit
	else
		echo "succeeded: Get Subdomain1 RecordIP Successfully"
	fi

	# s2v6
	Record_List_s2v6="$(curl -s -k https://dnsapi.cn/Record.List -d "${DNSPOD_TOKEN}&format=json&record_type=AAAA&domain=${DOMAIN}&sub_domain=${SUBDOMAIN2}")"

	RECORD_IP_s2v6=$(echo $Record_List_s2v6 | sed 's/.*"value":"\([0-9a-f\.:]*\)".*/\1/')
	LINE_ID_s2v6=$(echo $Record_List_s2v6 | sed 's/.*,"line_id":"\([0-9]*\)".*/\1/')
	STATUS_CODE_s2v6=$(echo $Record_List_s2v6 | sed 's/.*{"code":"\([0-9]*\)".*/\1/')
	RECORD_ID_s2v6=$(echo $Record_List_s2v6 | sed 's/.*\[{"id":"\([0-9]*\)".*/\1/')

	if [ "$STATUS_CODE_s2v6" != "1" ]; then
		echo "Error: Get DNSPOD API Error!"
		exit
	else
		echo "succeeded: Get Subdomain2 RecordIP Successfully"
	fi
}

UpdateIPv4() {

	if [ "$RECORD_IP_s1v4" = "$CURRENT_IPv4" ] && [ "$RECORD_IP_s2v4" = "$CURRENT_IPv4" ]; then
		echo "Record_IPv4 = Current_IPv4,skip update."
	else
		echo Start DDNS update IPv4 ...
		sleep_time

		Update_s1v4="$(curl -s -k -X POST https://dnsapi.cn/Record.Modify -d "${DNSPOD_TOKEN}&record_id=${RECORD_ID_s1v4}&record_type=A&record_line_id=${LINE_ID_s1v4}&domain=${DOMAIN}&sub_domain=${SUBDOMAIN1}&value=${CURRENT_IPv4}")"
		echo "${Update_s1v4}"

		Update_s2v4="$(curl -s -k -X POST https://dnsapi.cn/Record.Modify -d "${DNSPOD_TOKEN}&record_id=${RECORD_ID_s2v4}&record_type=A&record_line_id=${LINE_ID_s2v4}&domain=${DOMAIN}&sub_domain=${SUBDOMAIN2}&value=${CURRENT_IPv4}")"
		echo "${Update_s2v4}"

		NewIPv4="${CURRENT_IPv4}"
		echo "NewIPv4 = ${NewIPv4}"
		NewIP=${NewIPv4}

		#send_email
		sleep 2
		send_wechat
		sleep 2

	fi
}

UpdateIPv6() {

	if [ "$RECORD_IP_s1v6" = "$CURRENT_IPv6" ] && [ "$RECORD_IP_s2v6" = "$CURRENT_IPv6" ]; then
		echo "Record_IPv6 = Current_IPv6,skip update."
	else
		echo Start DDNS update IPv6 ...
		sleep_time

		Update_s1v6="$(curl -s -k -X POST https://dnsapi.cn/Record.Modify -d "${DNSPOD_TOKEN}&record_id=${RECORD_ID_s1v6}&record_type=AAAA&record_line_id=${LINE_ID_s1v6}&domain=${DOMAIN}&sub_domain=${SUBDOMAIN1}&value=${CURRENT_IPv6}")"
		echo "${Update_s1v6}"

		Update_s2v6="$(curl -s -k -X POST https://dnsapi.cn/Record.Modify -d "${DNSPOD_TOKEN}&record_id=${RECORD_ID_s2v6}&record_type=AAAA&record_line_id=${LINE_ID_s2v6}&domain=${DOMAIN}&sub_domain=${SUBDOMAIN2}&value=${CURRENT_IPv6}")"
		echo "${Update_s2v6}"

		NewIPv6="${CURRENT_IPv6}"
		echo "NewIPv6=${NewIPv6}"
		NewIP=${NewIPv6}

		#send_email
		sleep 2
		send_wechat
		sleep 2
	fi

}

checkhost=checkip.dns.he.net

ping -4 -c2 223.6.6.6 >>/dev/null 2>&1
if [ $? -eq 0 ]; then
	echo -e "\nIPv4 network is ok."
	GetWanIPv4
	GetRecordIPv4
	echo "=============================================================================="
	printf "%-24s %-29s\n" "" "CURRENT_IPv4: $CURRENT_IPv4"
	echo "------------------------------------------------------------------------------"
	printf "%-18s %-25s %-18s %-25s \n" "RECORD_IP_s1v4: " "$RECORD_IP_s1v4" "RECORD_IP_s2v4: " "$RECORD_IP_s2v4"
	printf "%-18s %-25s %-18s %-25s \n" "RECORD_ID_s1v4: " "$RECORD_ID_s1v4" "RECORD_ID_s2v4: " "$RECORD_ID_s2v4"
	printf "%-18s %-25s %-18s %-25s \n" "LINE_ID_s1v4: " "$LINE_ID_s1v4" "LINE_ID_s2v4: " "$LINE_ID_s2v4"
	printf "%-18s %-25s %-18s %-25s \n" "STATUS_CODE_s1v4: " "$STATUS_CODE_s1v4" "STATUS_CODE_s2v4: " "$STATUS_CODE_s2v4"
	echo "=============================================================================="
	UpdateIPv4
else
	echo -e "\nIPv4 network is down,please check it."
fi

ping -6 -c2 2400:3200::1 >>/dev/null 2>&1
if [ $? -eq 0 ]; then
	echo -e "\nIPv6 network is ok."
	GetWanIPv6
	GetRecordIPv6
	echo "=============================================================================="
	printf "%-24s %-29s\n" "" "CURRENT_IPv6: $CURRENT_IPv6"
	echo "------------------------------------------------------------------------------"
	printf "%-18s %-25s %-18s %-25s \n" "RECORD_IP_s1v6: " "$RECORD_IP_s1v6" "RECORD_IP_s2v6: " "$RECORD_IP_s2v6"
	printf "%-18s %-25s %-18s %-25s \n" "RECORD_ID_s1v6: " "$RECORD_ID_s1v6" "RECORD_ID_s2v6: " "$RECORD_ID_s2v6"
	printf "%-18s %-25s %-18s %-25s \n" "LINE_ID_s1v6: " "$LINE_ID_s1v6" "LINE_ID_s2v6: " "$LINE_ID_s2v6"
	printf "%-18s %-25s %-18s %-25s \n" "STATUS_CODE_s1v6: " "$STATUS_CODE_s1v6" "STATUS_CODE_s2v6: " "$STATUS_CODE_s2v6"
	echo "=============================================================================="
	UpdateIPv6
else
	echo -e "\nIPv6 network is down,please check it."
fi
